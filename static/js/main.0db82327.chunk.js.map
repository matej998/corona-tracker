{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","img/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0db82327.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if(!confirmed){\n    return 'Loading...';\n  }\n  return(\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of recovered cases</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of death cases</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) =>{\n  let changableUrl = url;\n\n  if(country)(\n    changableUrl = `${url}/countries/${country}`\n  )\n  try{\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\n\n    const modifiedData ={ confirmed, recovered, deaths, lastUpdate };\n\n    return modifiedData;\n  }catch(error){\n\n  }\n}\n\nexport const fetchDailyData = async () =>{\n  try{\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n\n  }catch(error){\n\n  }\n}\n\nexport const fetchCountries = async () =>{\n  try{\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  }catch(error){\n\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() =>{\n    const fetchAPI = async () =>{\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData.length\n    ?(\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [{\n          data: dailyData.map(({ confirmed }) => confirmed),\n          label: 'Confirmed',\n          borderColor: '#3333ff',\n          fill: 'true',\n        }, {\n          data: dailyData.map(({ deaths }) => deaths),\n          label: 'Deaths',\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\n          fill: 'true',\n        }],\n      }}/>\n  ) : null\n);\n\nconst barChart = (\n  confirmed\n  ?(\n    <Bar\n      data={{\n        labels: ['Confirmed', 'Recovered', 'Deaths'],\n        datasets: [{\n          label: 'People',\n          backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n          data: [confirmed.value, recovered.value, deaths.value],\n        }]\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}`},\n      }}\n    />\n  ) : null\n);\n\n  return(\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n   )\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() =>{\n    const fetchAPI = async () =>{\n      setFetchedCountries(await fetchCountries());\n    }\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n\n  return(\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => <option key={i} value={country}> {country} </option>)}\n      </NativeSelect>\n    </FormControl>\n  )\n}\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './img/image.png';\n\nclass App extends React.Component{\n\n  state={\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) =>{\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData , country: country});\n  }\n\n  render(){\n    const { data, country } = this.state;\n    return(\n      <div className={styles.container}>\n      <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange={this.handleCountryChange} />\n      <Chart data={data} country={country} />\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}